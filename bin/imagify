#!/usr/bin/env python3

from matplotlib import pyplot
import numpy
from math import sqrt
import sys
import os

def main():

    data = []
    grayscale = False

    with open(sys.argv[1]) as f:
        content = f.readlines()

        for line in content:
            line = line.strip()

            if ';' in line:
                elems = line.split(';')
                elems = [float(x.strip())/255.0 for x in elems]
                #data.append(elems[0])
                #data.append(elems[1])
                #data.append(elems[2])
                data.append([elems[2], elems[1], elems[0]])
                #print(elems)
            else:
                grayscale = True
                elem = float(line)
                data.append(elem)

    length = len(data)
    h = int(sys.argv[2])
    w = int(sys.argv[3])
    p = 1
    #if not grayscale: p = 3
    if h*w*p != length:
        print("Cannot display " + str(length) + " elements as " + str(h) + " x " + str(w))
        exit(-1)

    if grayscale:
        img = numpy.array(data).reshape((h,w))
        pyplot.imshow(img, cmap='gray')
        #pyplot.show()
        pyplot.savefig("out.png")

    else:
        img = numpy.array(data).reshape((h,w,3))
        #print(img)
        pyplot.imshow(img, interpolation='nearest')
        pyplot.savefig("out.png")

    os.system("display out.png")
    os.system("rm out.png")

if __name__ == "__main__":
    main()
