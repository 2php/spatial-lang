#!/usr/bin/env python

from os import listdir
from os.path import isfile, join, basename 
import os
import argparse
import subprocess
import commands


APP_DIR='{0}/apps/src/'.format(os.environ['SPATIAL_HOME'])

def copyApp(app, args, params):
    path = '{0}/{1}.scala'.format(APP_DIR, app)
    postfix = '_'.join([str(a) for a in args])
    postfix = postfix + ''.join(["_{}_{}".format(k,str(params[k])) for k in params ]) 
    newname = '{}_{}'.format(app, postfix)
    newpath = '{0}/{1}.scala'.format(APP_DIR, newname)
    with open(newpath, 'w') as newapp:
        with open(path, 'r') as origapp :
            for line in origapp:
                found = False
                if 'object {}'.format(app) in line:
                    newapp.write(line.replace(app, newname))
                    found = True
                for param in params:
                    if 'val {} = '.format(param) in line:
                        newapp.write('val {} = {}\n'.format(param, params[param]))
                        found = True
                if not found:
                    newapp.write(line)
    return newname

def runApp(app, args, params):
    print('running {} with args={} and params={}'.format(app, str(args),
        '='.join(['{}={}'.format(p,params[p]) for p in params])))
    newname = copyApp(app, args, params)
    command = "source bin/runapp {} true &".format(newname)
    print(command)
    subprocess.call(command, shell=True)

def main():
    parser = argparse.ArgumentParser(description='Run experiments')
    (opts, args) = parser.parse_known_args()
    runApp('DotProduct', [640], {'ts':320, 'ip':4, 'op':4})

if __name__ == "__main__":
    main()

